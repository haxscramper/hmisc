SparseGrid	hmisc/types/sparse_grid.html#SparseGrid	sparse_grid: SparseGrid	
maxRow	hmisc/types/sparse_grid.html#maxRow,SparseGrid[T]	sparse_grid: maxRow[T](s: SparseGrid[T]): int	
minRow	hmisc/types/sparse_grid.html#minRow,SparseGrid[T]	sparse_grid: minRow[T](s: SparseGrid[T]): int	
add	hmisc/types/sparse_grid.html#add,SparseGrid[T],seq[T]	sparse_grid: add[T](s: var SparseGrid[T]; row: seq[T]): void	
prepend	hmisc/types/sparse_grid.html#prepend,SparseGrid[T],seq[T]	sparse_grid: prepend[T](s: var SparseGrid[T]; row: seq[T]): void	
rowAppend	hmisc/types/sparse_grid.html#rowAppend,SparseGrid[T],T,int	sparse_grid: rowAppend[T](s: var SparseGrid[T]; elem: T; idx: int): void	
toSparseGrid	hmisc/types/sparse_grid.html#toSparseGrid.c,seq[seq[T]]	sparse_grid: toSparseGrid[T](s: seq[seq[T]]): SparseGrid[T]	
rows	hmisc/types/sparse_grid.html#rows.i,SparseGrid[T]	sparse_grid: rows[T](s: SparseGrid[T]): tuple[idx: int, row: Map[int, T]]	
columns	hmisc/types/sparse_grid.html#columns.i,SparseGrid[T],int	sparse_grid: columns[T](s: SparseGrid[T]; row: int): tuple[idx: int, cell: T]	
firstColumn	hmisc/types/sparse_grid.html#firstColumn,SparseGrid[T],int	sparse_grid: firstColumn[T](grid: SparseGrid[T]; row: int): int	
`[]`	hmisc/types/sparse_grid.html#[],SparseGrid[T],int,int	sparse_grid: `[]`[T](grid: SparseGrid[T]; row, col: int): T	
`[]`	hmisc/types/sparse_grid.html#[],SparseGrid[T],	sparse_grid: `[]`[T](grid: SparseGrid[T]; cell: (int, int)): T	
`[]=`	hmisc/types/sparse_grid.html#[]=,SparseGrid[T],,T	sparse_grid: `[]=`[T](grid: var SparseGrid[T]; pos: (int, int); val: T): void	
`[]=`	hmisc/types/sparse_grid.html#[]=,SparseGrid[T],int,int,T	sparse_grid: `[]=`[T](grid: var SparseGrid[T]; row, col: int; val: T): void	
mapIt2d	hmisc/types/sparse_grid.html#mapIt2d.t,SparseGrid[T],untyped	sparse_grid: mapIt2d[T](inseq: SparseGrid[T]; op: untyped): untyped	
mapItRows	hmisc/types/sparse_grid.html#mapItRows.t,SparseGrid[T],untyped	sparse_grid: mapItRows[T](inseq: SparseGrid[T]; op: untyped): untyped	
toSparse	hmisc/types/sparse_grid.html#toSparse,Seq2d[T]	sparse_grid: toSparse[T](inseq: Seq2d[T]): SparseGrid[T]	
